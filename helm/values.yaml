product:
  name: PRODUCT
  apiUrl: "http://product-service:8081"
  msName: product
  image:
    repository: wesleywillians/intensivo-product
  containerPort: 8081

productService:
  name: PRODUCT-SERVICE
  type: NodePort
  port: 8081
  protocol: TCP
  nodePort: 30080
  selector:
    app: product


rabbitMq:
  name: RABBITMQ
  image: 
    repository: rabbitmq:3-management
  containerPort1: 15672
  containerPort2: 5672

rabbitMqService:
  name: RABBITMQ-SERVICE
  type: ClusterIP
  port: 15672
  protocol: TCP

rabbitMqCookie:
  name: RABBITMQ-ERLANG-COOKIE
  cookie: "SWQOKODSQALRPCLNMEQG"

rabbitMqDefaultUser:
  name: RABBITMQ-DEFAULT-USER
  user: "rabbitmq"

rabbitMqDefaultPass:
  name: RABBITMQ-DEFAULT-PASS
  pass: "rabbitmq"

rabbitMqDefaultVhost:
  name: RABBITMQ-DEFAULT-VHOST
  vhost: "/"

rabbitMqDefaultHost:
  name: RABBITMQ-DEFAULT-HOST
  host: "rabbitmq-service"

redis:
  name: REDIS
  image:
    repository: redis
  containerPort: 6379
  replicas: 1

redisService:
  name: REDIS-SERVICE
  type: ClusterIP
  port: 6379

redisHost:
  name: REDIS-HOST
  host: "redis-service:6379"

catalog:
  msName: catalog
  image:
    repository: wesleywillians/intensivo-catalog
  containerPort: 8080

catalogService:
  name: CATALOG-SERVICE
  type: LoadBalancer
  port: 8080
  protocol: TCP
  selector:
    app: catalog

checkout:
  msName: checkout
  image:
    repository: wesleywillians/intensivo-checkout
  containerPort: 8082

orderPayment:
  msName: orderpayment
  image:
    repository: wesleywillians/intensivo-order:v2
  containerPort: 6572
  args: "payment"

# orderPayment:
#   msName: order
#   image:
#     repository: wesleywillians/intensivo-order:v2
#   containerPort: 6573
#   args: "checkout"
